{"version":3,"file":"static/webpack/static/development/pages/index.js.807bf1cd1988014ac29a.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React, {Component} from 'react';\n\nimport axios from 'axios'\nimport \"../styles/base.scss\"\nimport { api } from '../static/config-variable'\n\nimport Todo from \"../components/Todo\";\nimport Header from \"../components/Header\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      note: '',\n      todos: []\n    }\n  }\n\n  componentDidMount() {\n    this.fetchData()\n  }\n\n  fetchData = async () => {\n    const res = await axios.get(api);\n    const todos = await res.data;\n    this.setState({todos})\n  };\n\n  handleChange = (event) => {\n    this.setState({note: event.target.value});\n  };\n\n  addTodo = () => {\n    if (this.state.note === '') {\n      return\n    }\n    let self = this;\n    axios.post(api, {note: this.state.note, completed: false})\n      .then(function (res) {\n        self.setState(prevState => ({\n          todos: [...prevState.todos, {note: res.data.note, completed: res.data.completed, id: res.data.id}],\n          note: ''\n        }))\n      }).catch(function (error) {\n        console.log(error);\n      });\n\n  };\n\n  handleKeyPress = (event) => {\n    const ENTER = 13;\n    if (event.which === ENTER && this.state.note) {\n      this.addTodo()\n    }\n  };\n\n  updateStatus(id) {\n    let self = this;\n    let data = this.state.todos.find(item => item.id === id);\n    data.completed = !data.completed;\n    axios.put(api + `/${id}`, data)\n      .then(function (res) {\n        self.setState({\n          todos: self.state.todos.map(todo => {\n            if (todo.id === id) {\n              todo.completed = res.data.completed;\n              return todo\n            }\n            return todo\n          })\n        })\n      });\n  }\n\n  deleteTodo = (id) => {\n    let self = this;\n    axios.delete(api + `/${id}`)\n      .then(function (res) {\n        self.setState({\n          todos: self.state.todos.filter(function (todo) {\n            return todo.id !== id\n          })\n        });\n      })\n  }\n\n  render() {\n    let todos = this.state.todos.map((val) => {\n      return <Todo key={val.id} note={val.note} completed={val.completed}\n        updateStatus={() => this.updateStatus((val.id))}\n        deleteTodo={() => this.deleteTodo((val.id))}\n      />\n    });\n\n    return (\n      <div className={\"container\"}>\n        <Header/>\n        {todos}\n        <div className={\"box\"}>\n          <input placeholder=\"Enter Notes\" type=\"text\" className=\"input\"\n            value={this.state.note}\n            onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress.bind(this)}\n          />\n          <button className=\"button\" onClick={this.addTodo}>add!</button>\n        </div>\n        <footer className=\"footer\"/>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAbA;AAmBA;AAAA;AAAA;AACA;AACA;AArBA;AAuBA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAAA;AAIA;AACA;AACA;AAEA;AACA;AAtCA;AAwCA;AACA;AAAA;AACA;AACA;AACA;AACA;AA7CA;AAiEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAzEA;AACA;AACA;AAFA;AAFA;AAMA;AACA;;;AACA;AACA;AACA;;;AAoCA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAPA;AASA;AACA;;;AAcA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AApGA;AACA;AAsGA;;;;A","sourceRoot":""}